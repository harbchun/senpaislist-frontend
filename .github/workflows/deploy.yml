# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ staging, production ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        - name: Check out code
          uses: actions/checkout@v2

        - name: Extract branch name
          shell: bash
          run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          id: extract_branch
          
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_CD }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_CD }}
            aws-region: ca-central-1

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build, tag, and push image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: sl-frontend-${{ steps.extract_branch.outputs.branch }}
            IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build --target ${{ steps.extract_branch.outputs.branch }} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

        - name: Pull and redeploy image
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SSH_HOST }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_KEY }}
            port: 22
            script: |
              aws ecr get-login-password --region ca-central-1 
              docker login --username AWS --password-stdin 402788700696.dkr.ecr.ca-central-1.amazonaws.com
              docker pull 402788700696.dkr.ecr.ca-central-1.amazonaws.com/sl-backend-${{ steps.extract_branch.outputs.branch }}:latest
              docker service update --image 402788700696.dkr.ecr.ca-central-1.amazonaws.com/sl-backend-${{ steps.extract_branch.outputs.branch }}:latest ${{ steps.extract_branch.outputs.branch }}-backend
